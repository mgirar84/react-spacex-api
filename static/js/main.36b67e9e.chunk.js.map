{"version":3,"sources":["Images/spacex.jpg","Components/Nav/RocketsLoader/RocketCard/RocketCard.js","Components/Nav/RocketsLoader/RocketsLoader.js","Components/Nav/MissionsLoader/MissionCard/MissionCard.js","Components/Nav/MissionsLoader/MissionsLoader.js","Components/Nav/RoadsterLoader/RoadsterCard/RoadsterCard.js","Components/Nav/RoadsterLoader/RoadsterLoader.js","Components/Nav/ShipsLoader/ShipCard/ShipCard.js","Components/Nav/ShipsLoader/ShipsLoader.js","Components/Nav/Intro/Intro.js","serviceWorker.js","Components/Header/Header.js","Components/Nav/Nav.js","App.js","index.js"],"names":["module","exports","RocketCard","props","state","pic","logo","class","this","rockets","map","rocket","key","id","rocket_name","style","backgroundImage","flickr_images","description","cost_per_launch","React","Component","RocketsLoader","fetch","then","data","json","setState","MissionCard","missions","mission","mission_name","MissionsLoader","RoadsterCard","console","log","roadster","name","details","RoadsterLoader","ShipCard","Ships","Ship","ship_name","image","home_port","ship_type","roles","ShipLoader","ShipsLoader","Intro","href","Boolean","window","location","hostname","match","Header","to","src","alt","Nav","App","className","Routing","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.36b67e9e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spacex.f2b1b847.jpg\";","import React from 'react';\nimport './RocketCard.css';\nimport '../../../../Images/spacex.jpg';\n\nclass RocketCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pic: \"https://www.spacex.com/sites/spacex/files/styles/media_gallery_large/public/2009_-_01_liftoff_south_full_wide_ro8a1280_edit.jpg?itok=8loiSGt1\",\n            logo: \"spacex.jpg\"\n        }\n    }\n\n\trender() {\n        return (\n            <div>\n                <h2>Rockets</h2>\n                <div class=\"rocketContainer\">\n                    {\n                    this.props.rockets.map((rocket) => \n                        <div class=\"rocketCard\">\n                            <h2 class=\"rocketHeading\" key={rocket.id}>{rocket.rocket_name}</h2>\n                            <div class=\"rocketImage\" style={{backgroundImage: (rocket.flickr_images[0] === \"https://www.spacex.com/sites/spacex/files/styles/media_gallery_large/public/2009_-_01_liftoff_south_full_wide_ro8a1280_edit.jpg?itok=8loiSGt1\" ? \"url(spacex.jpg)\" : \"url(\" + rocket.flickr_images[0] + \")\")}}></div>\n                            <p class=\"rocketText rocketDescription\">{rocket.description}</p>\n                            <p class=\"rocketText\">Cost per launch: ${rocket.cost_per_launch}</p>\n                        </div>   \n                    )}\n                </div>\n            </div>\n        )\n\t}\n};\n\nexport default RocketCard","import React from 'react';\nimport RocketCard from './RocketCard/RocketCard';\n\nclass RocketsLoader extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        rockets:[]\n        }\n\n        //populates rockets with data from api to create an array of objects\n        this.RocketsLoader()\n    }\n\n    RocketsLoader = () => {\n        fetch('https://api.spacexdata.com/v3/rockets')\n        .then(data => data.json())\n            .then((data) => {\n                this.setState({\n                    rockets: data,\n                })\n            })\n    }\n\n    render() {\n        return (\n        <div>\n            <RocketCard rockets={this.state.rockets}/>\n        </div>\n        )\n    }\n}\n\nexport default RocketsLoader","import React from 'react';\nimport './MissionCard.css';\n\nclass MissionCard extends React.Component {\n\trender() {\n        return (\n            <div>\n                <h1>Missions</h1>\n                <div class=\"missionContainer\">\n                    \n                    {\n                    this.props.missions.map((mission) => \n                        <div class=\"missionCard\">\n                            <h2>{mission.mission_name}</h2>\n                            <p class=\"missionDescription\">{mission.description}</p>\n                        </div>   \n                    )}\n                </div>\n            </div>\n        )\n\t}\n};\n\nexport default MissionCard","import React from 'react';\nimport MissionCard from './MissionCard/MissionCard';\n\n\nclass MissionsLoader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        missions:[]\n    }\n\n    //populates missions with data from api to create an array of objects\n    this.MissionsLoader()\n  }\n\n  MissionsLoader = () => {\n    fetch('https://api.spacexdata.com/v3/missions')\n      .then(data => data.json())\n        .then((data) => {\n          this.setState({\n            missions: data,\n          })\n        })\n  }\n\n  \n  \n    render() {\n    return (\n    \n        <MissionCard missions={this.state.missions}/>\n    )\n    }\n}\n\nexport default MissionsLoader","import React from 'react';\nimport './RoadsterCard.css';\n\nclass RoadsterCard extends React.Component {\n\trender() {\n        console.log(this.props.roadster)\n        return (\n            <div>\n                <h1>Tesla Roadster</h1>\n                <div class=\"roadsterContainer\">\n                    <div class=\"roadsterCard\">\n                        <div class=\"roadsterText\">\n                            <h2>{this.props.roadster.name}</h2>\n                            <p class=\"roadsterDetails\">{this.props.roadster.details}</p>\n                        </div>\n                        <div class=\"roadsterImage\" style={{backgroundImage: (this.props.roadster.flickr_images[0] == null ? \"url(spacex.jpg)\" : \"url(\" + this.props.roadster.flickr_images[0] + \")\")}}></div>\n                    </div>   \n                </div>\n            </div>\n        )\n\t}\n};\n\nexport default RoadsterCard","import React from 'react';\nimport RoadsterCard from './RoadsterCard/RoadsterCard';\n\nclass RoadsterLoader extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        roadster:{\n            flickr_images:[]\n        }\n        }\n\n        //populates rockets with data from api to create an array of objects\n        this.RoadsterLoader()\n    }\n\n    RoadsterLoader = () => {\n        fetch('https://api.spacexdata.com/v3/roadster')\n        .then(data => data.json())\n            .then((data) => {\n                this.setState({\n                    roadster: data,\n                })\n            })\n    }\n\n    render() {\n        return (\n        <div>\n            <RoadsterCard roadster={this.state.roadster}/>\n        </div>\n        )\n    }\n}\n\nexport default RoadsterLoader","import React from 'react';\nimport './ShipCard.css';\nimport '../../../../Images/spacex.jpg';\n\nclass ShipCard extends React.Component {\n\trender() {\n        return (\n            <div>\n                <h2>Ships</h2>\n                <div class=\"shipsContainer\">\n                    {\n                    this.props.Ships.map((Ship) => \n                        <div class=\"shipCard\">\n                            <h2 class=\"shipHeading\">{Ship.ship_name}</h2>\n                            <div class=\"shipImage\" style={{backgroundImage: (Ship.image == null ? \"url(spacex.jpg)\" : \"url(\" + Ship.image + \")\")}}></div>\n                            <div class=\"shipInfo\">\n                                <p>Home Port: {Ship.home_port}</p>\n                                <p>Type: {Ship.ship_type}</p>  \n                                <p>Ship Roles:</p>\n                                <ul>\n                                    <li>{Ship.roles[0]}</li>\n                                    {(Ship.roles[1] ? <li>{Ship.roles[1]}</li> : '')}\n                                </ul>\n                            </div>\n                        </div>   \n                    )}\n                </div>\n            </div>\n        )\n\t}\n};\n\nexport default ShipCard","import React from 'react';\nimport ShipCard from './ShipCard/ShipCard';\n\nclass ShipLoader extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        Ships:[]\n        }\n\n        //populates Ships with data from api to create an array of objects\n        this.ShipsLoader()\n    }\n\n    ShipsLoader = () => {\n        fetch('https://api.spacexdata.com/v3/Ships')\n        .then(data => data.json())\n            .then((data) => {\n                this.setState({\n                    Ships: data,\n                })\n            })\n    }\n\n    render() {\n        return (\n        <div>\n            <ShipCard Ships={this.state.Ships}/>\n        </div>\n        )\n    }\n}\n\nexport default ShipLoader","import React from 'react';\nimport './Intro.css';\n\nclass Intro extends React.Component {\n\trender() {\n        return (\n            <div class=\"intro\">\n                <h1>Welcome to my Space X React build.</h1>\n                <p>This was my first attempt at interacting an API to populate a React frontend.</p>\n                <a href=\"https://docs.spacexdata.com/?version=latest\">https://docs.spacexdata.com/?version=latest</a>\n            </div>\n        )\n\t}\n};\n\nexport default Intro","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport './Header.css';\nimport '/public/SpaceX-Logo.svg'\nimport {Link} from 'react-router-dom'\n\n\nclass Header extends React.Component {\n\trender() {\n        return (\n            <Link to=\"/\">\n                <div class=\"header\">\n                    <img class=\"spaceXLogo\" src=\"SpaceX-Logo.svg\" alt=\"Space X\"/>\n                </div>\n            </Link>\n        )\n\t}\n};\n\nexport default Header","import React from 'react';\nimport './Nav.css'\nimport {Link} from 'react-router-dom'\n\nclass Nav extends React.Component {\n\trender() {\n        return (\n            <div>\n                <div class=\"buttonsContainer\">\n                    <Link to=\"/rockets\"><button class=\"navButton rocketButton\">Rockets</button></Link>\n                    <Link to=\"/missions\"><button class=\"navButton missionButton\">Missions</button></Link>\n                    <Link to=\"/roadster\"><button class=\"navButton roadsterButton\">Roadster</button></Link>\n                    <Link to=\"/ships\"><button class=\"navButton shipsButton\">Ships</button></Link>\n                </div>\n            </div>\n        )\n\t}\n};\n\nexport default Nav","import React from 'react';\nimport './App.css';\nimport Header from './Components/Header/Header';\nimport Nav from './Components/Nav/Nav'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Nav />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Route, BrowserRouter as Router,Switch} from 'react-router-dom'\nimport './index.css';\nimport RocketsLoader from './Components/Nav/RocketsLoader/RocketsLoader';\nimport MissionsLoader from './Components/Nav/MissionsLoader/MissionsLoader';\nimport RoadsterLoader from './Components/Nav/RoadsterLoader/RoadsterLoader';\nimport ShipsLoader from './Components/Nav/ShipsLoader/ShipsLoader';\nimport Intro from './Components/Nav/Intro/Intro'\n\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nclass Routing extends React.Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Route path=\"/\" component={ App } />\n          <Switch>\n            <Route path=\"/rockets\" component={ RocketsLoader } />\n            <Route path=\"/missions\" component={ MissionsLoader } />\n            <Route path=\"/roadster\" component={ RoadsterLoader } />\n            <Route path=\"/ships\" component={ ShipsLoader } />\n            <Route path=\"/\" component={ Intro } />\n          </Switch>\n        </div>\n      </Router>\n    )\n  }\n}\n\nReactDOM.render(\n    <Routing />,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}